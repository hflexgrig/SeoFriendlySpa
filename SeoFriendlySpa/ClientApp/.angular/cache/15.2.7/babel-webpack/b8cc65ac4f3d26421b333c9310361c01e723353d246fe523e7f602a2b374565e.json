{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { ItemService } from '../services/item.service';\nimport { ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nexport class ItemsComponent {\n  constructor() {\n    this.metaService = inject(Meta);\n    this.titleService = inject(Title);\n    this.itemsService = inject(ItemService);\n    this.route = inject(ActivatedRoute);\n    this.item = {\n      title: '',\n      content: ''\n    };\n    this.id = 0;\n  }\n  ngOnInit() {\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n    this.route.params.subscribe(params => {\n      this.id = params[\"id\"];\n      this.getAndUpdateItem();\n    });\n  }\n  getAndUpdateItem() {\n    this.itemsService.getItem(this.id).subscribe({\n      next: value => {\n        this.item = value;\n        this.titleService.setTitle(this.item.title);\n        this.metaService.updateTag({\n          property: \"title\",\n          content: this.item.title\n        });\n      },\n      error: err => {\n        console.error(err.error);\n      }\n    });\n  }\n}\nItemsComponent.ɵfac = function ItemsComponent_Factory(t) {\n  return new (t || ItemsComponent)();\n};\nItemsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ItemsComponent,\n  selectors: [[\"app-items\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[3, \"src\"]],\n  template: function ItemsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"h4\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\");\n      i0.ɵɵelement(6, \"img\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"h4\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.item.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"src\", ctx.item.imagePath, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.item.content);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,MAAM,QAAgB,eAAe;AACzD,SAASC,IAAI,EAAEC,KAAK,QAAQ,2BAA2B;AACvD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,cAAc,QAAQ,iBAAiB;;AAQhD,OAAM,MAAOC,cAAc;EAL3BC;IAOU,gBAAW,GAAGN,MAAM,CAACC,IAAI,CAAC;IAC1B,iBAAY,GAAGD,MAAM,CAACE,KAAK,CAAC;IAC5B,iBAAY,GAAGF,MAAM,CAACG,WAAW,CAAC;IAClC,UAAK,GAAGH,MAAM,CAACI,cAAc,CAAC;IACtC,SAAI,GAAS;MAACG,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAS;IAC7C,OAAE,GAAW,CAAC;;EAGdC,QAAQ;IAEN,IAAI,CAACC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAExD,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,SAAS,CAAID,MAAM,IAAI;MACvC,IAAI,CAACN,EAAE,GAAGM,MAAM,CAAC,IAAI,CAAC;MACxB,IAAI,CAACE,gBAAgB,EAAE;IAEvB,CAAC,CAAC;EAGJ;EAGQA,gBAAgB;IACtB,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACV,EAAE,CAAC,CAACO,SAAS,CAAC;MAC3CI,IAAI,EAAGC,KAAW,IAAI;QACpB,IAAI,CAACC,IAAI,GAAGD,KAAK;QACjB,IAAI,CAACE,YAAY,CAACC,QAAQ,CAAC,IAAI,CAACF,IAAI,CAAChB,KAAK,CAAC;QAE3C,IAAI,CAACmB,WAAW,CAACC,SAAS,CAAC;UACzBC,QAAQ,EAAE,OAAO;UACjBpB,OAAO,EAAE,IAAI,CAACe,IAAI,CAAChB;SACpB,CAAC;MACJ,CAAC;MACDsB,KAAK,EAAEC,GAAG,IAAG;QACXC,OAAO,CAACF,KAAK,CAACC,GAAG,CAACD,KAAK,CAAC;MAC1B;KACD,CAAC;EACJ;;AAvCWxB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MAGbA,2BAAK;MACGA,YAAc;MAAAA,iBAAK;MAG3BA,2BAAK;MACDA,yBAA6B;MACjCA,iBAAM;MAENA,2BAAK;MACGA,YAAgB;MAAAA,iBAAK;;;MARrBA,eAAc;MAAdA,oCAAc;MAIbA,eAAsB;MAAtBA,0DAAsB;MAIvBA,eAAgB;MAAhBA,sCAAgB","names":["inject","Meta","Title","ItemService","ActivatedRoute","ItemsComponent","constructor","title","content","ngOnInit","id","Number","route","snapshot","paramMap","get","params","subscribe","getAndUpdateItem","itemsService","getItem","next","value","item","titleService","setTitle","metaService","updateTag","property","error","err","console","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/haykgrigoryan/Projects/SeoFriendlySpa/SeoFriendlySpa/ClientApp/src/app/items/items.component.ts","/Users/haykgrigoryan/Projects/SeoFriendlySpa/SeoFriendlySpa/ClientApp/src/app/items/items.component.html"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { ItemService } from '../services/item.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Item } from '../models/item';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})\nexport class ItemsComponent implements OnInit {\n\n  private metaService = inject(Meta);\n  private titleService = inject(Title);\n  private itemsService = inject(ItemService);\n  private route = inject(ActivatedRoute);\n  item: Item = {title: '', content: ''} as Item;\n  id: number = 0;\n\n\n  ngOnInit(): void {\n\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n\n    this.route.params.subscribe(  (params) => {\n      this.id = params[\"id\"];\n    this.getAndUpdateItem();\n\n    });\n\n    \n  }\n\n\n  private getAndUpdateItem() {\n    this.itemsService.getItem(this.id).subscribe({\n      next: (value: Item) => {\n        this.item = value;\n        this.titleService.setTitle(this.item.title);\n\n        this.metaService.updateTag({\n          property: \"title\",\n          content: this.item.title\n        });\n      },\n      error: err => {\n        console.error(err.error);\n      }\n    });\n  }\n}\n","<h1>Item</h1>\n\n\n<div>\n    <h4>{{item.title}}</h4>\n</div>\n\n<div>\n    <img [src]=\"item.imagePath\" >\n</div>\n\n<div>\n    <h4>{{item.content}}</h4>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}